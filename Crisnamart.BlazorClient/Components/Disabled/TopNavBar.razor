@code {
	// Strings / etiquetas (puedes internacionalizar luego)
	private string SearchPlaceholder => "Buscar productos, códigos o descripciones";
	private string NotificationsTitle => "Notificaciones";
	private string NotificationsSubtitle => $"Tienes {Notifications.Count} elementos sin leer";
	private string MarkAllTooltip => "Marcar todo como leído";
	private string ViewAllText => "Ver todo";
	private string NotificationsViewAllLink => "#";
	private string LogoutLink => "#logout";

	// Modelo de notificación (prototipo)
	private record NotificationItem(int Id, string Title, string Message, string TimeAgo, string Link, string? AvatarUrl, bool IsActive) {
		public string Initials => string.IsNullOrEmpty(Title) ? "?" : string.Concat(Title.Split(' ').Select(s => s.Length > 0 ? s[0] : ' ')).ToUpperInvariant();
	}

	// Modelo menú usuario
	private record UserMenuItem(string Label, string Link);

	// Modelo usuario
	private record UserProfile(string Name, string Email, string AvatarUrl);

	// Datos de ejemplo (hardcodeados por ahora)
	private List<NotificationItem> Notifications { get; set; } = new()
	{
		new NotificationItem(1, "Tu pedido ha sido realizado", " esperando envío", "1 minuto", "#", "images/avatar/avatar-1.jpg", true),
		new NotificationItem(2, "Jitu Chauhan", " respondió a tu orden pendiente", "2 días", "#", "images/avatar/avatar-5.jpg", false),
		new NotificationItem(3, "Tienes mensajes nuevos", " 2 mensajes sin leer", "3 días", "#", "images/avatar/avatar-2.jpg", false)
	};

	private UserProfile CurrentUser { get; set; } = new UserProfile("Crisnamart Admin", "admindemo@email.com", "images/avatar/avatar-1.jpg");

	private List<UserMenuItem> UserMenu { get; set; } = new()
	{
		new UserMenuItem("Home", "#"),
		new UserMenuItem("Perfil", "#"),
		new UserMenuItem("Ajustes", "#")
	};

	// Acciones (ejemplos)
	private void MarkAllAsRead() {
		Notifications = Notifications.Select(n => n with { IsActive = false }).ToList();
		// futura llamada API para marcar como leídas...
		StateHasChanged();
	}
}



<nav class="navbar navbar-expand-lg navbar-glass">
	<div class="container-fluid">
		<div class="flex justify-between items-center w-full">
			<div class="flex items-center">
				<a class="text-inherit block xl:hidden mr-3" data-bs-toggle="offcanvas" href="#offcanvasExample" role="button" aria-controls="offcanvasExample">
					<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-text-indent-right" viewBox="0 0 16 16">
						<path d="M2 3.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5zm10.646 2.146a.5.5 0 0 1 .708.708L11.707 8l1.647 1.646a.5.5 0 0 1-.708.708l-2-2a.5.5 0 0 1 0-.708l2-2zM2 6.5a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 3a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z" />
					</svg>
				</a>

				<form role="search">
					<label for="search" class="hidden text-gray-800 font-medium mb-2 invisible">Buscar</label>
					<input class="border border-gray-300 text-gray-900 rounded-lg focus:shadow-[0_0_0_.25rem_rgba(10,173,10,.25)] focus:ring-green-600 focus:ring-0 focus:border-green-600 block p-2 px-3 disabled:opacity-50 disabled:pointer-events-none w-full text-base"
						   type="search"
						   placeholder="@SearchPlaceholder"
						   aria-label="Search"
						   id="search" />
				</form>
			</div>
			<div>
				<ul class="list-unstyled flex items-center gap-2">
					<li class="dropdown-center">
						<a class="relative btn text-gray-600 hover:bg-gray-100 hover:text-green-600 h-12 w-12 p-0 rounded-full" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
							@* campana con contador *@
							<svg xmlns="http://www.w3.org/2000/svg"
								 width="24"
								 height="24"
								 viewBox="0 0 24 24"
								 fill="none"
								 stroke="currentColor"
								 stroke-width="2"
								 stroke-linecap="round"
								 stroke-linejoin="round"
								 class="icon icon-tabler icons-tabler-outline icon-tabler-bell">
								<path stroke="none" d="M0 0h24v24H0z" fill="none" />
								<path d="M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6" />
								<path d="M9 17v1a3 3 0 0 0 6 0v-1" />
							</svg>
							@if (Notifications.Count > 0)
							{
								<span class="absolute -top-2 right-0 translate-middle inline-block text-sm align-baseline bg-red-600 text-white font-semibold rounded-full h-5 w-5 text-center">@Notifications.Count</span>
							}
						</a>

						<div class="dropdown-menu dropdown-menu-end dropdown-menu-lg !p-0 border-0">
							<div class="border-b p-5 flex justify-between items-center">
								<div>
									<h5 class="mb-1">@NotificationsTitle</h5>
									<p class="mb-0 small">@NotificationsSubtitle</p>
								</div>
								<a href="#" class="text-gray-500" title="@MarkAllTooltip">
									<button class="btn text-gray-600 hover:bg-gray-100 hover:text-green-600 h-10 w-10 p-0 rounded-full"
											data-bs-toggle="tooltip"
											data-bs-placement="bottom"
											title="@MarkAllTooltip"
											@onclick="MarkAllAsRead">
										<svg xmlns="http://www.w3.org/2000/svg"
											 width="16"
											 height="16"
											 viewBox="0 0 24 24"
											 fill="none"
											 stroke="currentColor"
											 stroke-width="2"
											 stroke-linecap="round"
											 stroke-linejoin="round"
											 class="icon icon-tabler icons-tabler-outline icon-tabler-checks">
											<path stroke="none" d="M0 0h24v24H0z" fill="none" />
											<path d="M7 12l5 5l10 -10" />
											<path d="M2 12l5 5m5 -5l5 -5" />
										</svg>
									</button>
								</a>
							</div>

							<div data-simplebar style="height: 250px">
								<!-- Lista de notificaciones generada desde C# -->
								<ul class="notification-list-scroll fs-6">
									@foreach (var n in Notifications)
									{
										var itemCls = n.IsActive ? "px-5 py-4 hover:bg-gray-100 border-b border-gray-300 bg-gray-100 active" : "px-5 py-4 hover:bg-gray-100 border-b border-gray-300";
										<li class="@itemCls" @key="n.Id">
											<a href="@n.Link" class="text-gray-500">
												<div class="flex">
													@if (!string.IsNullOrEmpty(n.AvatarUrl))
													{
														<img src="@n.AvatarUrl" alt="" class="h-10 w-10 rounded-full" />
													}
													else
													{
														<div class="h-10 w-10 rounded-full bg-gray-200 inline-flex items-center justify-center text-sm text-gray-600">@n.Initials</div>
													}
													<div class="ms-4">
														<p class="mb-1">
															<span class="text-gray-900">@n.Title</span>
															@n.Message
														</p>
														<span class="flex items-center">
															<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-clock text-gray-500" viewBox="0 0 16 16">
																<path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z" />
																<path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z" />
															</svg>
															<small class="ms-2">@n.TimeAgo</small>
														</span>
													</div>
												</div>
											</a>
										</li>
									}
								</ul>
							</div>

							<div class="px-5 py-4 text-center">
								<a href="@NotificationsViewAllLink">@ViewAllText</a>
							</div>
						</div>
					</li>

					<li class="dropdown">
						<a href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
							<img src="@CurrentUser.AvatarUrl" alt="" class="h-12 w-12 rounded-full" />
						</a>

						<div class="dropdown-menu dropdown-menu-end !p-0">
							<div class="leading-snug px-5 py-4 border-b border-gray-300">
								<h5 class="mb-1 text-base">@CurrentUser.Name</h5>
								<small>@CurrentUser.Email</small>
							</div>

							<ul class="list-unstyled px-2 py-3">
								@foreach (var mi in UserMenu)
								{
									<li>
										<a class="dropdown-item" href="@mi.Link">@mi.Label</a>
									</li>
								}
							</ul>
							<div class="border-t px-5 py-3">
								<a href="@LogoutLink">Log Out</a>
							</div>
						</div>
					</li>
				</ul>
			</div>
		</div>
	</div>
</nav>